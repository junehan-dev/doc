The Principal structure of a program
====================================

이 장에서 다루는 내용은

   - C 문법
   - identifiers의 정의하는 법
   - objects의 정의하는 법
   - 컴파일러에게 statements로 Instructing하는 법

C 프로그램에서 고려해야 할 측면

   - syntactical aspect (형태소의)
   - semantic aspect (의미적인)
      - declarative
      - definitions of objects
      - statements

문법요소
--------

:Special words: ``#include, int, void, double, for, return``

   이 특수 단어들은 C언어가 내재하는 기능을 대표하며 바뀔 수 없다.

:Punctuations(meaning of spacing): ``{...}, (...), [...], /*...*/, <...>, ',', ';'``

   - ``<...>`` 기호는 다행히 C에선 거의 쓰이지 않는다.
   - comment라인은 컴파일러에게 무시된다. 따라서 코드를 문서화하기에 가장 적합한 장소가 된다.

      그러한 올바른 문서는 가독성과 이해력을 끌어올린다.

:Identifier(names): 이 이름들은 program에게 특정한 entities를 전달한다.

   - Data Objects: Variables
   - Type: ``size_t`` 와 같은 aliases. Object의 분류를 명시한다.

       ``_t``\가 뒤에 붙는데, 이것은 C의 컨벤션중 하나로 타입에 대한 명시를 분명히 사용자에게 전달하는 것이다.

   - Functions
   - Constants
